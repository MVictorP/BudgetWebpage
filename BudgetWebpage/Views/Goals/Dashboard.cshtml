@model BudgetWebpage.Models.Goal
@{
    ViewBag.Title = "Dashboard";
}
<head>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/Chart")
    <style>
        #rcorners1 {
            border-radius: 25px;
            background: #73AD21;
            padding: 20px;
            width: 200px;
            height: 150px;
        }

        #rcorners2 {
            border-radius: 25px;
            border: 2px solid #73AD21;
            padding: 20px;
            width: 200px;
            height: 150px;
        }
    </style>
</head>
<h2>Dashboard</h2>
<body>
    <div style="width: 100%; overflow: auto;">
        <div style="float: left; width: 50%;">
            <div class="chartjs-size-monitor" style="position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;">
                <div class="chartjs-size-monitor-expand" style="position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;">
                    <div style="position: absolute; width: 1000000px; height: 1000000px; left: 0; top: 0"></div>
                </div>
                <div class="chartjs-size-monitor-shrink" style="position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;">
                    <div style="position: absolute; width: 200%; height: 200%; left: 0; top: 0"></div>
                </div>
            </div>
            <canvas id="canvas" style="display: block; height: 345px; width: 690px;" width="552" height="276" class="chartjs-render-monitor"></canvas>
            <br>
            <br>
            <button id="randomizeData">Randomize Data</button>
            <button id="addDataset">Add Dataset</button>
            <button id="removeDataset">Remove Dataset</button>
            <button id="addData">Add Data</button>
            <button id="removeData">Remove Data</button>

        </div>

        <div id="pieCanvas" style="float: right; width: 50%;">
            <div class="chartjs-size-monitor" style="position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;">
                <div class="chartjs-size-monitor-expand" style="position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;">
                    <div style="position: absolute; width: 1000000px; height: 1000000px; left: 0; top: 0"></div>
                </div>
                <div class="chartjs-size-monitor-shrink" style="position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;">
                    <div style="position: absolute; width: 200%; height: 200%; left: 0; top: 0"></div>
                </div>
            </div>
            <canvas id="pieArea" style="display: block; height: 184px; width: 368px;" width="294" height="147" class="chartjs-render-monitor"></canvas>
        </div>
        <button id="pieRandomizeData">Randomize Data</button>
        <button id="pieAddDataset">Add Dataset</button>
        <button id="pieRemoveDataset">Remove Dataset</button>
        <script>
    var MONTHS = [
        "January", "February", "March", "April", "May", "June", "July", "August", "September", "October",
        "November", "December"
    ];
    var config = {
        type: 'line',
        data: {
            labels: ["January", "February", "March", "April", "May", "June", "July"],
            datasets: [
                {
                    label: "My First dataset",
                    backgroundColor: window.chartColors.red,
                    borderColor: window.chartColors.red,
                    data: [
                        randomScalingFactor(),
                        randomScalingFactor(),
                        randomScalingFactor(),
                        randomScalingFactor(),
                        randomScalingFactor(),
                        randomScalingFactor(),
                        randomScalingFactor()
                    ],
                    fill: false,
                }, {
                    label: "My Second dataset",
                    fill: false,
                    backgroundColor: window.chartColors.blue,
                    borderColor: window.chartColors.blue,
                    data: [
                        randomScalingFactor(),
                        randomScalingFactor(),
                        randomScalingFactor(),
                        randomScalingFactor(),
                        randomScalingFactor(),
                        randomScalingFactor(),
                        randomScalingFactor()
                    ],
                }
            ]
        },
        options: {
            responsive: true,
            title: {
                display: true,
                text: 'Chart.js Line Chart'
            },
            tooltips: {
                mode: 'index',
                intersect: false,
            },
            hover: {
                mode: 'nearest',
                intersect: true
            },
            scales: {
                xAxes: [
                    {
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Month'
                        }
                    }
                ],
                yAxes: [
                    {
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Value'
                        }
                    }
                ]
            }
        }
    };

    var ctx = document.getElementById("canvas").getContext("2d");
    window.myLine = new Chart(ctx, config);

    document.getElementById('randomizeData').addEventListener('click',
        function () {
            config.data.datasets.forEach(function (dataset) {
                dataset.data = dataset.data.map(function () {
                    return randomScalingFactor();
                });

            });

            window.myLine.update();
        });

    var colorNames = Object.keys(window.chartColors);
    document.getElementById('addDataset').addEventListener('click',
        function () {
            var colorName = colorNames[config.data.datasets.length % colorNames.length];
            var newColor = window.chartColors[colorName];
            var newDataset = {
                label: 'Dataset ' + config.data.datasets.length,
                backgroundColor: newColor,
                borderColor: newColor,
                data: [],
                fill: false
            };

            for (var index = 0; index < config.data.labels.length; ++index) {
                newDataset.data.push(randomScalingFactor());
            }

            config.data.datasets.push(newDataset);
            window.myLine.update();
        });

    document.getElementById('addData').addEventListener('click',
        function () {
            if (config.data.datasets.length > 0) {
                var month = MONTHS[config.data.labels.length % MONTHS.length];
                config.data.labels.push(month);

                config.data.datasets.forEach(function (dataset) {
                    dataset.data.push(randomScalingFactor());
                });

                window.myLine.update();
            }
        });

    document.getElementById('removeDataset').addEventListener('click',
        function () {
            config.data.datasets.splice(0, 1);
            window.myLine.update();
        });

    document.getElementById('removeData').addEventListener('click',
        function () {
            config.data.labels.splice(-1, 1); // remove the label first

            config.data.datasets.forEach(function (dataset, datasetIndex) {
                dataset.data.pop();
            });

            window.myLine.update();
        });

    var randomScalingFactor = function() {
        return Math.round(Math.random() * 100);
    };

    var pieConfig = {
        type: 'pie',
        data: {
            datasets: [
                {
                    data: [
                        randomScalingFactor(),
                        randomScalingFactor(),
                        randomScalingFactor(),
                        randomScalingFactor(),
                        randomScalingFactor(),
                    ],
                    backgroundColor: [
                        window.chartColors.red,
                        window.chartColors.orange,
                        window.chartColors.yellow,
                        window.chartColors.green,
                        window.chartColors.blue,
                    ],
                    label: 'Dataset 1'
                }
            ],
            labels: [
                "Red",
                "Orange",
                "Yellow",
                "Green",
                "Blue"
            ]
        },
        options: {
            responsive: true
        }
    };

    var pieChart = document.getElementById("pieArea").getContext("2d");
    window.myPie = new Chart(pieChart, pieConfig);

    document.getElementById('pieRandomizeData').addEventListener('click',
        function () {
            pieConfig.data.datasets.forEach(function(dataset) {
                dataset.data = dataset.data.map(function() {
                    return randomScalingFactor();
                });
            });

            window.myPie.update();
        });

    var colorNames = Object.keys(window.chartColors);
    document.getElementById('pieAddDataset').addEventListener('click',
        function() {
            var newDataset = {
                backgroundColor: [],
                data: [],
                label: 'New dataset ' + config.data.datasets.length,
            };

            for (var index = 0; index < config.data.labels.length; ++index) {
                newDataset.data.push(randomScalingFactor());

                var colorName = colorNames[index % colorNames.length];;
                var newColor = window.chartColors[colorName];
                newDataset.backgroundColor.push(newColor);
            }

            pieConfig.data.datasets.push(newDataset);
            window.myPie.update();
        });

    document.getElementById('pieRemoveDataset').addEventListener('click',
        function() {
            pieConfig.data.datasets.splice(0, 1);
            window.myPie.update();
        });
        </script>
    </div>
