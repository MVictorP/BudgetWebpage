@model BudgetWebpage.Models.Goal

@{
    ViewBag.Title = "Create a Goal";
}

<h2>Create a new goal</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <h4>This goal will start today</h4>
        <div class="form-group">
            @Html.LabelFor(model => model.Account_Number, "Your Accounts", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Account_Number", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Account_Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Target_Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Target_Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Target_Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.End_Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.End_Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.End_Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Recurring_Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Recurring_Status)
                    @Html.ValidationMessageFor(model => model.Recurring_Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group" id="showHideIntervalNum">
            @Html.LabelFor(model => model.Interval_Num, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Interval_Num", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Interval_Num, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="showHideIntervalType">
            @Html.LabelFor(model => model.Interval_Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Interval_Type", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Interval_Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<div id="testDate" data-value="@HttpContext.Current.Session["Test_Date"].ToString()"></div>
<script type="text/javascript">
    var test_date = $("#testDate").data('value');
    $(function () {       
        $('#Start_Date').datetimepicker({
            format: "MM/DD/YYYY",
            defaultDate: moment(test_date),
            minDate: moment(test_date),
        }).on('dp.change', function (e) {
            $(this).data('DateTimePicker').hide();
        });
    });
    $(function () {
        $('#End_Date').datetimepicker({
            format: "MM/DD/YYYY",
            minDate: moment(test_date),
        }).on('dp.change', function (e) {
            $(this).data('DateTimePicker').hide();
        });
    });
    $(function () {
        $('#Recurring_Status').removeAttr('checked');
        $('#showHideIntervalNum').hide();
        $('#showHideIntervalType').hide();

        $('#Recurring_Status').change(function () {
            if (this.checked)
            {
                $('#showHideIntervalNum').show();
                $('#showHideIntervalType').show();
            }
            else {
                $('#showHideIntervalNum').hide();
                $('#showHideIntervalType').hide();
            }
        });
    });
</script>
